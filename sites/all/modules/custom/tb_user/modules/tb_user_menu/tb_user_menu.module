<?php

/**
 * Implements hook_menu().
 */

function tb_user_menu_menu(){
  $items = array(
    'user/settings' => array(
      'title' => t('Settings'),
      'page callback' => 'tb_user_router',
      'page arguments' => array('drupal_goto', 'user/%/edit', 'user'),
      'access arguments' => array('access content'),
    ),
    'user/my-tickets' => array(
      'title' => t(''),
      'page callback' => 'tb_user_router',
      'page arguments' => array('tickets', 'my_tickets', 'user'),
      'access arguments' => array('access content'),
    ),
  );
  
  return $items;
}

/*
 * Callback
 */

function tb_user_router($view, $display, $var_type = ''){
  switch($var_type){
    case 'user':
      global $user;
      $args = $user->uid;
      break;
  }
  
  if($view == 'drupal_goto'){
    drupal_goto(preg_replace('/%/', $args, $display));
  }else{
    return isset($args) ? views_embed_view($view, $display, $args) : views_embed_view($view, $display);
  }
}

function tb_user_menu_init(){
  drupal_add_js(drupal_get_path('module', 'tb_user_menu'). '/js/header-menu.js');
  drupal_add_css(drupal_get_path('module', 'tb_user_menu'). '/css/header-menu.css');
}

/*
* Implements hook_block_info().
*/
function tb_user_menu_block_info(){
    $blocks['defender_tabs'] = array(
        'info' => t('Defender tabs'),
        'cache' => DRUPAL_CACHE_PER_PAGE,
    );
    $blocks['customer_tabs'] = array(
        'info' => t('Customer tabs'),
        'cache' => DRUPAL_CACHE_PER_PAGE,
    );
    $blocks['defender_tickets_submenu'] = array(
        'info' => t('Defender "Tickets" submenu'),
        'cache' => DRUPAL_CACHE_PER_PAGE,
    );

  return $blocks;
}

function tb_user_menu_block_view($delta = ''){
  $block = array();

  switch ($delta){
      case 'defender_tabs':
          // Define ticket id to show right tabs.
          $vars = tb_user_menu_define_ticket_id_defender($_GET['q']);
          if($vars !== null){
              $block['subject'] = t('Defender tabs');
              $block['content'] = theme('defender_tabs_block_ticket', $vars);
              break;
          }

          $block['subject'] = t('Defender tabs');
          $block['content'] = '';
          break;
      case 'customer_tabs':
          // Define ticket id to show right tabs.
          $vars = tb_user_menu_define_ticket_id_customer($_GET['q']);
          if($vars != null){
              $ticket = node_load($vars['ticket_id']);
              if(!empty($ticket->field_defender)){
                  $vars['has_defender'] = true;
              }else{
                  $vars['has_defender'] = false;
              }
              $block['subject'] = t('Customer tabs');
              $block['content'] = theme('customer_tabs_block_ticket', $vars);
              break;
          }
          // Defenders page.
          $vars = tb_user_menu_define_defender_id_customer($_GET['q']);
          if($vars != null){
              $block['subject'] = t('Customer tabs');
              $block['content'] = theme('customer_tabs_block_defenders', $vars);
              break;
          }

          // Else show nothing.
          $block['subject'] = t('Customer tabs');
          $block['content'] = '';
          break;
      case 'defender_tickets_submenu':
          $vars = tb_user_menu_ticket_type_defender($_GET['q']);
          if($vars !== null){
              $block['subject'] = t('Defender "Tickets" submenu');
              $block['content'] = theme('defender_tickets_submenu', $vars);
              break;
          }
          $block['subject'] = t('Defender "Tickets" submenu');
          $block['content'] = "";
          break;
  }

  return $block;
}

function tb_user_menu_theme($existing, $type, $theme, $path) {
  return array(
      'customer_tabs_block_ticket' => array(
          'template' => 'templates/customer_tabs_ticket',
          'variables' => array(
              'ticket_id' => null,
              'title' => null,
              'nid' => null,
              'has_defender' => false,
              // Quotes link tab is parent? For quote node.
              'quotes_parent' => false,
          ),
      ),
      'customer_tabs_block_defenders' => array(
          'template' => 'templates/customer_tabs_defenders',
          'variables' => array(
              'your_defender' => false,
              'parent' => false,
          ),
      ),
      'defender_tabs_block_ticket' => array(
          'template' => 'templates/defender_tabs_ticket',
          'variables' => array(
              'ticket_id' => null,
              'title' => null,
              'nid' => null,
              'has_dialog' => false,
              "has_quote" => false,
              "dialog_id" => null,
              "quote_id" => null,
          ),
      ),
      'defender_tickets_submenu' => array(
          'template' => 'templates/defender_tickets_submenu',
          'variables' => array(),
      ),
  );
}

/*
 * Custom defining of a ticket id depends on page.
 * Prepares variables for "tabs" theme function.
*/
function tb_user_menu_define_ticket_id_customer($q){
    // Array of "current page" highlight for links.
    $parent = array();
    // Initialize node.
    $node = '';

    // node/%nid pages.
    if(preg_match("/node\/(\d+)/", $q)){
        $node = node_load(preg_replace("/node\/(\d)/", "$1", $q));
        if($node){
            switch($node->type){
                case "ticket":
                    // We already set $node.
                    break;
                case "offer":
                    $node = node_load($node->field_ticket[LANGUAGE_NONE][0]['target_id']);
                    $parent['quotes'] = array('attributes' => array('class' => 'active'));
                    break;
                case "dialog":
                    if(isset($node->field_attached_to[LANGUAGE_NONE][0]['target_id'])){
                        $node = node_load($node->field_attached_to[LANGUAGE_NONE][0]['target_id']);
                        $parent['messages'] = array('attributes' => array('class' => 'active'));
                    }else{
                        $node = '';
                        break;
                    }
                    break;
                // It means that we have wrong node, not for our page.
                default:
                    $node = '';
                    break;
            }
        }
    }
    // ...And other pages.
    elseif(preg_match("/ticket\/(\d+)\/defender/", $q)){
        $node = node_load(preg_replace("/ticket\/(\d+)\/defender/", "$1", $q));
    }elseif(preg_match("/ticket\/(\d+)\/quotes/", $q)){
        $node = node_load(preg_replace("/ticket\/(\d+)\/quotes/", "$1", $q));
    }elseif(preg_match("/ticket\/(\d+)\/messages/", $q)){
        $node = node_load(preg_replace("/ticket\/(\d+)\/messages/", "$1", $q));
    }/*elseif(preg_match("/user\/\d+\/ticket\/(\d+)\/dialog\/\d+/", $q)){
        $parent['messages'] = array('attributes' => array('class' => 'active'));
        $node = node_load(preg_replace("/user\/\d+\/ticket\/(\d+)\/dialog\/\d+/", "$1", $q));
    }*/
    if(isset($node->nid)){
        return array("ticket_id" => $node->nid, "title" => $node->title, "nid" => $node->nid, 'parent' => $parent);
    }
    // Return null if there are no matches.
    return null;
}

/*
 * Custom defining customer's defender id.
 * Also prepares variables for defenders theme block.
 */
function tb_user_menu_define_defender_id_customer($q){
    // Array of "current page" highlight for links.
    global $user;
    $parent = array();
    $your_defender = null;
    // By default we will not display these tabs. If only one of the routes will be matched..
    $display_tabs = false;

    // Let's load all defenders that defend current customer's tickets.
    $tickets = db_query("SELECT DISTINCT field_defender_target_id FROM field_data_field_defender def INNER JOIN node ON def.entity_id = node.nid
            WHERE uid = :author",
        array(':author' => $user->uid));
    foreach($tickets as $ticket){
        $your_defender = $ticket->field_defender_target_id;
    }

    // user/$uid pages.
    if(preg_match("/^user\/(\d+)($|\/$)/", $q)){
        $display_tabs = true;
        $defender = user_load(preg_replace("/user\/(\d)/", "$1", $q));
        // Highlight defenders tab.
        if($defender){
            if(in_array("defender", $defender->roles)){
                $parent['defenders'] = array('attributes' => array('class' => 'active'));
            }

            // ...but if this user is current customer's defender - let's highlight him as "your defender".
            if($defender->uid == $your_defender){
                if(isset($parent['defenders'])) unset($parent['defenders']);
                $parent[] = array('your_defender' => array('attributes' => array('class' => 'active')));
            }
        }
    }
    // ...And other pages.
    elseif(preg_match("/defenders/", $q)){
        $display_tabs = true;
    }

    if($display_tabs){
        $vars['your_defender'] = $your_defender;
        $vars['parent'] = $parent;
        return $vars;
    }

    return null;
}

/*
 * If we are on messages page?
 */
function tb_user_menu_define_messages_customer($q){
    $highlight = null;

    // node/%nid pages.
    if(preg_match("/node\/(\d+)/", $q)){
        $node = node_load(preg_replace("/node\/(\d)/", "$1", $q));
        if($node){
            switch($node->type){
                case "dialog":
                    // We are on dialog node page.
                    // But this dialog could be attached to ticket.
                    if(!isset($node->field_attached_to[LANGUAGE_NONE][0]['target_id'])){
                        $highlight = true;
                    }
                    break;
                default:
                    break;
            }
        }
    }
    // ...And other pages.
    elseif(preg_match("/node\/add\/dialog/", $q)){
        $highlight = true;
        //$node = node_load(preg_replace("/ticket\/(\d+)\/defender/", "$1", $q));
    }

    return $highlight;
}

function tb_user_menu_define_ticket_id_defender($q){
    $vars = $quote_id = $dialog_id = null;
    $ticket_id = '';
    $node = '';
    $has_reply = false;
    global $user;
    $lawyer_id = $user->uid;

    // node/%nid pages.
    if(preg_match("/node\/(\d+)/", $q)){
        // We define $current_node and see if it is ticket node or quote node or something else.
        // So we can define ticket $node.
        $current_node = node_load(preg_replace("/node\/(\d)/", "$1", $q));
        if($current_node){
            switch($current_node->type){
                case "ticket":
                    $ticket_id = $current_node->nid;
                    $node = $current_node;
                    $reply = true;
                    break;
                case "offer":
                    $ticket_id = $current_node->field_ticket[LANGUAGE_NONE][0]['target_id'];
                    $node = node_load($ticket_id);
                    break;
                case "dialog":
                    if(isset($current_node->field_attached_to[LANGUAGE_NONE][0]['target_id'])){
                        $ticket_id = $current_node->field_attached_to[LANGUAGE_NONE][0]['target_id'];
                        $node = node_load($ticket_id);
                    }else{
                        $node = '';
                    }
                    break;
                default:
                    $node = '';
                    break;
            }
        }
    }
    // ...And other pages.
    elseif(preg_match("/node\/add\/offer\/(\d+)/", $q)){
        $ticket_id = preg_replace("/node\/add\/offer\/(\d+)/", "$1", $q);
        $node = node_load($ticket_id);
        $reply = true;
    }
    // It means that we successsfully loaded ticket node and know all information to show tabs.
    // Else $vars still will be null - it means we should not show them to user.
    if(isset($node->nid)){
        // Define does current lawyer has at least one quote on current ticket.
        $quotes = db_query("SELECT DISTINCT nid FROM node INNER JOIN field_data_field_ticket ticket
                  ON node.nid = ticket.entity_id WHERE field_ticket_target_id = :ticket_id AND uid = :defender_id",
            array(':ticket_id' => $ticket_id, ':defender_id' => $lawyer_id));
        $has_quote = false;
        foreach($quotes as $quote){
            $quote_id = $quote->nid;
            $has_quote = true;
        }

        // Define does current lawyer has at least one reply on current ticket.
        $dialogs = db_query("SELECT DISTINCT entity_id FROM field_data_field_users
                      WHERE field_users_target_id = :defender_id AND
                      entity_id IN (SELECT entity_id FROM field_data_field_attached_to  WHERE field_attached_to_target_id = :ticket_id)",
            array(':defender_id' => $lawyer_id, ':ticket_id' => $ticket_id));
        $has_dialog = false;
        foreach($dialogs as $dialog){
            $dialog_id = $dialog->entity_id;
            $has_dialog = true;
        }

        $vars = array(
            "ticket_id" => $ticket_id,
            "title" => $node->title,
            "nid" => $node->nid,
            "has_dialog" => $has_dialog,
            "has_quote" => $has_quote,
            "dialog_id" => $dialog_id,
            "quote_id" => $quote_id,
        );
    }

    // Return null if there are no matches.
    return $vars;
}

/*
 * Get ticket id and (if exists) determine ticket type (Posted? Replied? Quoted?..)
 */
function tb_user_menu_ticket_type_defender($q){
    tb_ticket_get_tickets_by_categories("posted");
    // All ticket pages..
    global $user;
    $vars = tb_user_menu_define_ticket_id_defender($q);
    if($vars != null){
        $ticket = node_load($vars['ticket_id']);
        // If defended.
        if($ticket->field_status[LANGUAGE_NONE][0]['value'] == 2){
            $vars['parent']['defended'] = array('attributes' => array('class' => 'active'));
        }
        // if In Progress.
        elseif($ticket->field_defender && $ticket->field_status[LANGUAGE_NONE][0]['value'] == 1){
            $vars['parent']['in_progress'] = array('attributes' => array('class' => 'active'));
        }else{
            // if Quoted.
            $quotes = db_query("SELECT nid FROM node INNER JOIN field_data_field_ticket ticket
                  ON node.nid = ticket.entity_id WHERE field_ticket_target_id = :ticket_id AND uid = :defender_id",
                  array(':ticket_id' => $ticket->nid, ':defender_id' => $user->uid));
            $at_least_one_quote = false;
            foreach($quotes as $quote){
                //dpm($quote);
                $at_least_one_quote = true;
            }
            if($at_least_one_quote){
                $vars['parent']['quoted'] = array('attributes' => array('class' => 'active'));
            }else{
                // if Replied.
                $dialogs = db_query("SELECT entity_id FROM field_data_field_users
                      WHERE field_users_target_id = :defender_id AND
                      entity_id IN (SELECT entity_id FROM field_data_field_attached_to  WHERE field_attached_to_target_id = :ticket_id)",
                      array(':defender_id' => $user->uid, ':ticket_id' => $ticket->nid));
                $at_least_one_dialog = false;
                foreach($dialogs as $dialog){
                    $at_least_one_dialog = true;
                }
                if($at_least_one_dialog){
                    $vars['parent']['replied'] = array('attributes' => array('class' => 'active'));
                }
                // if Posted.
                else{
                    $vars['parent']['posted'] = array('attributes' => array('class' => 'active'));
                }
            }
        }
        return $vars;
    }

    // ... AND all ticket list pages.
    $patterns = array(
        "(tickets\/posted)",
        "(tickets\/replied)",
        "(tickets\/quoted)",
        "(tickets\/in-progress)",
        "(tickets\/defended)",
    );
    if(preg_match("/". implode("|", $patterns). "/", $q)){
        $vars = array();
        return $vars;
    }

    return null;
}

/*
 * If only one ticket available we should return true and this ticket id
 * to show it in customer menu.
 */
function tb_user_menu_have_one_ticket(){
    global $user;
    $response = array('only_one' => false, 'nid' => '');
    $tickets = db_query("SELECT COUNT(nid) quantity, nid FROM node WHERE uid = :uid AND type = 'ticket'",
        array(':uid' => $user->uid));

    foreach($tickets as $ticket){
        if($ticket->quantity == 1){
            $response['only_one'] = true;
            $response['nid'] = $ticket->nid;
        }
    }

    return $response;
}