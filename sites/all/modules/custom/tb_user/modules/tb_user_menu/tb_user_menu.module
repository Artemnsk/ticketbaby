<?php

/**
 * Implements hook_menu().
 */

function tb_user_menu_menu(){
  $items = array(
    'user/settings' => array(
      'title' => t('Settings'),
      'page callback' => 'tb_user_router',
      'page arguments' => array('drupal_goto', 'user/%/edit', 'user'),
      'access arguments' => array('access content'),
    ),
    'user/my-tickets' => array(
      'title' => t(''),
      'page callback' => 'tb_user_router',
      'page arguments' => array('tickets', 'my_tickets', 'user'),
      'access arguments' => array('access content'),
    ),
    'user/tickets-in-progress' => array(
      'title' => t('Tickets in progress'),
      'page callback' => 'tb_user_router',
      'page arguments' => array('tickets', 'tickets_in_progress', 'user'),
      'access arguments' => array('access content'),
    ),
    'user/tickets-defended' => array(
      'title' => t('Tickets defended'),
      'page callback' => 'tb_user_router',
      'page arguments' => array('tickets', 'tickets_defended', 'user'),
      'access arguments' => array('access content'),
    ),
    'user/tickets-responded-to' => array(
      'title' => t('Tickets responded to'),
      'page callback' => 'tb_user_router',
      'page arguments' => array('tickets', 'tickets_responded_to', 'user'),
      'access arguments' => array('access content'),
    ),
  );
  
  return $items;
}

/*
 * Callback
 */

function tb_user_router($view, $display, $var_type = ''){
  switch($var_type){
    case 'user':
      global $user;
      $args = $user->uid;
      break;
  }
  
  if($view == 'drupal_goto'){
    drupal_goto(preg_replace('/%/', $args, $display));
  }else{
    return isset($args) ? views_embed_view($view, $display, $args) : views_embed_view($view, $display);
  }
}

function tb_user_menu_init(){
  drupal_add_js(drupal_get_path('module', 'tb_user_menu'). '/js/header-menu.js');
  drupal_add_css(drupal_get_path('module', 'tb_user_menu'). '/css/header-menu.css');
}

/*
* Implements hook_block_info().
*/
function tb_user_menu_block_info(){
  $blocks['customer_tabs'] = array(
      'info' => t('Customer tabs'),
      'cache' => DRUPAL_CACHE_PER_PAGE,
  );

  return $blocks;
}

function tb_user_menu_block_view($delta = ''){
  $block = array();
  // Define ticket id to show right tabs.
  $vars = tb_user_menu_define_ticket_id($_GET['q']);
  // Does ticket has a defender?
  if($vars != null){
      $ticket = node_load($vars['ticket_id']);
      if(!empty($ticket->field_defender)){
          $vars['has_defender'] = true;
      }else{
          $vars['has_defender'] = false;
      }
  }
  switch ($delta) {
      case 'customer_tabs':
          $block['subject'] = t('Customer tabs');
          $block['content'] = $vars != null ? theme('tabs_block', $vars) : '';
          break;
  }

  return $block;
}

function tb_user_menu_theme($existing, $type, $theme, $path) {
  return array(
      'tabs_block' => array(
          'template' => 'templates/customer_tabs',
          'variables' => array(
              'ticket_id' => null,
              'title' => null,
              'nid' => null,
              'has_defender' => false,
              // Quotes link tab is parent? For quote node.
              'quotes_parent' => false,
          ),
      ),
  );
}

/*
 * Custom defining of a ticket id depends on page.
 * Prepares variables for "tabs" theme function.
*/
function tb_user_menu_define_ticket_id($q){
    //$q = 'node/2135';
    // node/%nid pages.
    if(preg_match("/node\/(\d+)/", $q)){
        $node = node_load(preg_replace("/node\/(\d)/", "$1", $q));
        if($node){
            switch($node->type){
                case "ticket":
                    return array("ticket_id" => $node->nid, "title" => $node->title, "nid" => $node->nid, 'quotes_parent' => array());
                case "offer":
                    $ticket = node_load($node->field_ticket[LANGUAGE_NONE][0]['target_id']);
                    return array("ticket_id" => $ticket->nid, "title" => $ticket->title, "nid" => $ticket->nid, 'quotes_parent' => array('attributes' => array('class' => 'active')));
            }
        }
    }
    // ...And other pages.
    elseif(preg_match("/ticket\/(\d+)\/defender/", $q)){
        $node = node_load(preg_replace("/ticket\/(\d+)\/defender/", "$1", $q));
        return array("ticket_id" => $node->nid, "title" => $node->title, "nid" => $node->nid, 'quotes_parent' => array());
    }elseif(preg_match("/ticket\/(\d+)\/quotes/", $q)){
        $node = node_load(preg_replace("/ticket\/(\d+)\/quotes/", "$1", $q));
        return array("ticket_id" => $node->nid, "title" => $node->title, "nid" => $node->nid, 'quotes_parent' => array());
    }elseif(preg_match("/user\/\d+\/ticket\/(\d+)\/messages/", $q)){
        $node = node_load(preg_replace("/user\/\d+\/ticket\/(\d+)\/messages/", "$1", $q));
        return array("ticket_id" => $node->nid, "title" => $node->title, "nid" => $node->nid, 'quotes_parent' => array());
    }
    // Return null if there are no matches.
    return null;
}